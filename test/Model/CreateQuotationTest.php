<?php
/**
 * CreateQuotationTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  kruegge82\cargoboard
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API Documentation
 *
 * &lt;h4&gt;Authentication.&lt;/h4&gt; &lt;p&gt;Authentication is done with X-API-KEY. You can request a key via mail to api@cargoboard.com.
 *
 * The version of the OpenAPI document: 1.0.5
 * Contact: api@cargoboard.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace kruegge82\cargoboard\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CreateQuotationTest Class Doc Comment
 *
 * @category    Class
 * @description CreateQuotation
 * @package     kruegge82\cargoboard
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CreateQuotationTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CreateQuotation"
     */
    public function testCreateQuotation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product"
     */
    public function testPropertyProduct()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipper"
     */
    public function testPropertyShipper()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "consignee"
     */
    public function testPropertyConsignee()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lines"
     */
    public function testPropertyLines()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer_order_code"
     */
    public function testPropertyCustomerOrderCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "coupon_code"
     */
    public function testPropertyCouponCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "wants_export_declaration"
     */
    public function testPropertyWantsExportDeclaration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "wants_climate_neutral_shipment"
     */
    public function testPropertyWantsClimateNeutralShipment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "wants_insurance"
     */
    public function testPropertyWantsInsurance()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "value_of_goods_amount"
     */
    public function testPropertyValueOfGoodsAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "value_of_goods_currency"
     */
    public function testPropertyValueOfGoodsCurrency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterm"
     */
    public function testPropertyIncoterm()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
